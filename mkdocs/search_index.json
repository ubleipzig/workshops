{
    "docs": [
        {
            "location": "/",
            "text": "Workshop-Dokumentationen\n\n\nEine Sammlung an Workshop-Dokumentationen, die den Teilnehmern als Ausdruck ausgeh\u00e4ndigt werden k\u00f6nnen.\n\n\n\n\nGIT\n\n\nBeginners\n\n\nAdvanced\n\n\n\n\n\n\nVuFind-Docker\n\n\nMkDocs",
            "title": "Home"
        },
        {
            "location": "/#workshop-dokumentationen",
            "text": "Eine Sammlung an Workshop-Dokumentationen, die den Teilnehmern als Ausdruck ausgeh\u00e4ndigt werden k\u00f6nnen.   GIT  Beginners  Advanced    VuFind-Docker  MkDocs",
            "title": "Workshop-Dokumentationen"
        },
        {
            "location": "/git/beginners/",
            "text": "GIT-Beginners\n\n\nVorbereitung\n\n\nGIT installieren\n\n\nEin aktuelles Git sollte auf jeder gr\u00f6\u00dferen Distribution vorliegen, bzw. kann\nf\u00fcr Windows/Mac unter \nhttps://git-scm.com/downloads\n heruntergeladen werden.\n\n\n# Debian/Ubuntu\n$ apt-get install git\n# Fedora\n$ yum install git # (up to Fedora 21)\n$ dnf install git # (Fedora 22 and later)\n# Gentoo\n$ emerge --ask --verbose dev-vcs/git\n# Arch Linux\n$ pacman -S git\n# openSUSE\n$ zypper install git\n# Mageia\n$ urpmi git\n# FreeBSD\n$ pkg install git\n# Solaris 9/10/11 (OpenCSW)\n$ pkgutil -i git\n# Solaris 11 Express\n$ pkg install developer/versioning/git\n# OpenBSD\n$ pkg_add git\n# Alpine\n$ apk add git\n\n\n\n\nAnpassen der Benutzerinformationen\n\n\n$ git config --global user.name \"Roy Trenneman\"\n$ git config --global user.email \"roy@reynholm-industries.co.uk\"\n$ git config --global --list\nuser.name=Roy Trenneman\nuser.email=roy@reynholm-industries.co.uk\n\n\n\n\n\n\n--global\n ist Benutzer-Kontext, Einstellungen werden in \n$HOME/.gitconfig\n gespeichert\n\n\n--local\n ist Repository-Kontext, Einstellungen werden in \n<repository-folder>/.git/config\n gespeichert\n\n\n--system\n ist Host-Kontext, Einstellungen werden in \n/etc/gitconfig\n gespeichert\n\n\nBenutzer-Kontext \u00fcberschreibt Host-Kontext, Repository-Kontext \u00fcberschreibt Benutzer-Kontext\n\n\n\n\nAnpassen des Push-Verhaltens\n\n\n$ git config --global push.default simple\n\n\n\n\n\n\nlegt explizit das neue Standard-Verhalten von GIT bei Commit-Ver\u00f6ffentlichung fest.\n Andernfalls wird beim ersten Push-Versuch eine Warnung ausgegeben.\n\n\n\n\nRepository klonen\n\n\n$ git clone workshop@git.ub.intern.uni-leipzig.de:git-workshop\nKlone nach 'git-workshop' ...\nFertig.\n\n\n\n\n\n\nGIT-Repositorys werden geklont (kopiert)\n\n\ns\u00e4mtliche Repository-Aktionen werden lokal durchgef\u00fchrt\n\n\ndas Ergebnis ist ein konsistentes Repository, welches primitiv auf einem oder mehreren Remote-Servern abgelegt werden kann\n\n\n\n\n$ cd git-workshop/\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nnothing to commit, working tree clean\n\n\n\n\n\n\ndie lokale Kopie des Repositorys ist identisch mit der Version des Servers\n\n\nder Standard-Branch ist \nmaster\n\n\n\n\n$ git remote -v\norigin  workshop@git.ub.intern.uni-leipzig.de:git-workshop (fetch)\norigin  workshop@git.ub.intern.uni-leipzig.de:git-workshop (push)\n\n\n\n\n\n\ngit clone\n f\u00fcgt automatisch den Server, von dem das Repository geklont wurde, als \norigin\n-Remote hinzu\n\n\n\n\nDateien umbenennen mit \ngit mv <src> <dst>\n\n\n$ git mv docs/index.md docs/mkdocs.md\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        umbenannt:      docs/index.md -> docs/mkdocs.md\n\n\n\n\n\n\n\ngit erkennt, dass eine Datei umbenannt wurde, in dem der Inhalt der Dateien verglichen wird\n\n\nwerden zwischen Umbenennen und Hinzuf\u00fcgen zur Versionskontrolle \u00c4nderungen am Inhalt der Datei vorgenommen wird die Datei nicht als \numbenannt\n erkannt\n\n\n\n\nCode \u00e4ndern / Dateien hinzuf\u00fcgen\n\n\nmkdocs.yml\n \u00e4ndern, \ndocs/index.md\n hinzuf\u00fcgen, siehe \npatches/code_\u00e4ndern_dateien_hinzuf\u00fcgen.patch\n\n\ngit status\n zeigt ge\u00e4nderte Dateien\n\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        umbenannt:      docs/index.md -> docs/mkdocs.md\n\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n        ge\u00e4ndert:       mkdocs.yml\n\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        docs/index.md\n\n\n\n\n\ngit diff mkdocs.yml\n zeigt \u00c4nderungen einer Datei\n\n\n$ git diff mkdocs.yml\ndiff --git a/mkdocs.yml b/mkdocs.yml\nindex c97182f..3212117 100644\n--- a/mkdocs.yml\n+++ b/mkdocs.yml\n@@ -1 +1 @@\n-site_name: My Docs\n+site_name: Workshop Dokumentationen\n\n\n\n\n\n\nwird kein Dateiname \u00fcbergeben, werden alle \u00c4nderungen in Dateien angezeigt, die bereits der Versionskontrolle unterliegen und nicht zur Staging-Area hinzugef\u00fcgt wurden\n\n\n\n\ngit add <filename|dirname> [...]\n f\u00fcgt ge\u00e4nderte Dateien zur \nStaging-Area\n hinzu\n\n\n$ git add docs mkdocs.yml\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        ge\u00e4ndert:       docs/index.md\n        kopiert:        docs/index.md -> docs/mkdocs.md\n        ge\u00e4ndert:       mkdocs.yml\n\n\n\n\n\nStaging-Area\n beinhaltet alle zum \ncommit\n vorgemerkten \u00c4nderungen\n\n\n$ git diff --staged\ndiff --git a/docs/index.md b/docs/index.md\nindex da37213..80ccc76 100644\n--- a/docs/index.md\n+++ b/docs/index.md\n@@ -1,17 +1,3 @@\n-# Welcome to MkDocs\n+# Workshop Dokumentationen\n\n-For full documentation visit [mkdocs.org](http://mkdocs.org).\n-\n-## Commands\n-\n-* `mkdocs new [dir-name]` - Create a new project.\n-* `mkdocs serve` - Start the live-reloading docs server.\n-* `mkdocs build` - Build the documentation site.\n...\n\n\n\n\n\n\nzeigt neue Dateien an, wenn zur Staging-Area hinzugef\u00fcgt\n\n\n\n\nCommit erstellen\n\n\ngit commit\n erstellt einen Commit mit allen vorgemerkten \u00c4nderungen aus der \nStaging-Area\n\n\n$ git commit\n[master 66f8437] * moved brief mkdocs docu to separate page * created new index page * modified title\n 3 files changed, 4 insertions(+), 18 deletions(-)\n rewrite docs/index.md (99%)\n copy docs/{index.md => mkdocs.md} (100%)\n\n\n\n\n\n\nleere Commit-Beschreibung bricht Commit ab\n\n\n\u00c4nderungen wurden als ein Commit in das \nlokale\n Repository gestellt\n\n\n\n\nlokales Repository weicht um einen Commit vom Remote-Server ab\n\n\n$ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nnothing to commit, working tree clean\n\n\n\n\n\nDie Historie\n\n\nDie Entwicklung des Projektes veranschaulicht die Historie der Versionskontrolle.\nSie hilft, den Ursprung von Implementationen, Autoren und Bemerkungen anzuzeigen\nund nachzuvollziehen.\n\n\ngit log\n zeigt gesamte Historie eines Branches\n\n\n$ git log\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nzeigt neben eineindeutigen Commit-Hash, Commit-Autor und Commit-Datum, zus\u00e4tzlich\n die Commit-Bemerkung\n\n\nSortierung erfolgt nach Anwendung des Commits und muss nicht dem Commit-Datum\n entsprechen\n\n\n\n\n$ git log --follow mkdocs.yml\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nzeigt nur die Commit-Historie, welche die angegebene Datei betrifft, auch, wenn sie nicht mehr in der Versionkontrolle vorhanden ist\n\n\ndie Datei muss im Arbeitsbereich vorhanden sein\n\n\n\n\ngit push\n ver\u00f6ffentlicht den neuen Commit auf Remote-Server\n\n\n$ git push\nZ\u00e4hle Objekte: 5, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (4/4), Fertig.\nSchreibe Objekte: 100% (5/5), 564 bytes | 0 bytes/s, Fertig.\nTotal 5 (delta 0), reused 0 (delta 0)\nTo workshop@git.ub.intern.uni-leipzig.de:git-workshop\n   f5c2a5c..8c298ce  master -> master\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nnothing to commit, working tree clean\n\n\n\n\nBranches erstellen\n\n\ngit branch <branch-name>\n erstellt neuen Branch, ausgehend von Branch \nmaster\n\n\n$ git branch create-git-beginners-docs\n$ git checkout create-git-beginners-docs\nZu Branch 'create-git-beginners-docs' gewechselt\n\n\n\n\n\n\nEntwicklung erfolgt in Branches, um sich nicht gegenseitig zu behindern\n\n\nshortcut w\u00e4re \ngit checkout -b create-git-beginners-docs\n\n\n\u00c4nderungen werden beim Branch-Wechseln zum neuen Branch mitgenommen, sofern m\u00f6glich\n\n\n\n\ndocs/git-beginners.md\n erstellen, \ndocs/index.md\n \u00e4ndern, siehe \npatches/branches_erstellen.patch\n\n\ngit add\n und \ngit commit\n zum Speichern der \u00c4nderungen\n\n\n$ git add docs/\n$ git commit\n[create-git-beginners-docs f6906eb] * initially added git-beginners documentation * modified index page\n 2 files changed, 2 insertions(+)\n create mode 100644 docs/git-beginners.md\n\n$ git status\nAuf Branch create-git-beginners-docs\nnothing to commit, working tree clean\n\n$ git log\ncommit f6906eb41fb9f874d60b34cb304e6435e649b271\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:13:26 2017 +0200\n\n    * initially added git-beginners documentation\n    * modified index page\n\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\ngit push --set-upstream origin <local-branch-name>\n ver\u00f6ffentlicht den Branch\n\n\n$ git push --set-upstream origin create-git-beginners-docs\nZ\u00e4hle Objekte: 5, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (4/4), Fertig.\nSchreibe Objekte: 100% (5/5), 560 bytes | 0 bytes/s, Fertig.\nTotal 5 (delta 0), reused 0 (delta 0)\nTo git.ub.intern.uni-leipzig.de:git-workshop\n * [new branch]      create-git-beginners-docs -> create-git-beginners-docs\nBranch create-git-beginners-docs konfiguriert zum Folgen von Remote-Branch create-git-beginners-docs von origin.\n\n\n\n\n\n\nneuer Branch wird ver\u00f6ffentlicht und zum Folgen des gleichen konfiguriert\n\n\ndurch \n--set-upstream\n wird der Remote-Server und Branch als Referenz eingetragen, um \ngit pull\n, \ngit push\n, \ngit status\n ohne Argumente aufzurufen\n\n\n\n\nBranches aktuell halten (auf Branch \ncreate-vufind-docker-docs\n)\n\n\n$ git checkout create-vufind-docker-docs\n\n$ git pull\nAlready up-to-date.\n\n\n\n\n\n\nohne Angabe von Remote-Server und Branch wird der aktuelle Branch mit \u00c4nderungen des referenzierten Branchs aktualisiert\n\n\n\n\ndocs/vufind-docker.md\n \u00e4ndern, siehe \npatches/branch_aktuell_halten.patch\n, commit erstellen\n\n\n$ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n docs/index.md  | 18 ++----------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 20 insertions(+), 17 deletions(-)\n create mode 100644 docs/mkdocs.md\n\n\n\n\n$ git log\ncommit 5969abcb120c31977453629f41df9a2268f2fe70\nMerge: f1a9427 202ba1a\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 15:24:26 2017 +0200\n\n    Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\n\ncommit f1a9427c2087674fab1b6648ba5a8c70f2f833ae\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 15:23:57 2017 +0200\n\n    WIP made changes to docs\n\ncommit 202ba1a4e25e2af3d101849c0565da16a181b075\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 14:33:07 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 1f01e40096b96b33baab268ac1823ef5a99c5f1c\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:34 2017 +0200\n\n    added ide config\n\ncommit ef542025b53c461576f37f43c0951df72a2b92aa\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:13 2017 +0200\n\n    initially added vufind-docker documentation\n\ncommit 10aeed70270a918e137c7e693a14f79197023977\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\ngibt man Remote-Server und Branch an, werden dessen \u00c4nderungen in den aktuellen Branch gemerged\n\n\nmerge\n sortiert den fehlenden \nmaster\n-Commit chronologisch ein\n\n\n\n\nIgnorierte Dateien (auf Branch \nmaster\n)\n\n\nBeim Testen der Entwicklung entstehen tempor\u00e4re Dateien, die nicht in der Versionskontrolle erfasst werden sollen.\nDiese Dateien und Verzeichnisse werden in einer Datei \n.gitignore\n aufgelistet.\n\n\n$ git checkout master\nZu Branch 'master' gewechselt\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\n\n\n\n\n\n\nwechselt die Arbeitskopie auf den Branch \nmaster\n\n\n\n\n$ mkdocs build\nINFO    -  Cleaning site directory\nINFO    -  Building documentation to directory: /home/roy/git-workshop/site\n\n\n\n\n\n\nmkdocs\n-Befehl zum Erzeugen der statischen Seiten aus dem Projekt\n\n\n\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        site/\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)\n\n\n\n\n\n\nUnversionierte Dateien und Verzeichnisse k\u00f6nnen in \n.gitignore\n aufgenommen werden\n\n\nDateien, welche bereits der Versionskontrolle unterliegen, werden in .gitignore ignoriert\n\n\n\n\n$ cat >.gitignore <<EOF\n/site\nEOF\n\n\n\n\n\n\nerzeugt Datei \n.gitignore\n mit einem Eintrag\n\n\n\n\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        .gitignore\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)\n\n\n\n\n\n\nGIT behandelt \n.gitignore\n als neue unversionierte Datei innerhalb der Arbeitskopie\n\n\n\n\n$ git add .gitignore\n$ git commit\n[master c92f8e6] created .gitignore by adding /site\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore\n\n$ git push\nZ\u00e4hle Objekte: 3, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (2/2), Fertig.\nSchreibe Objekte: 100% (3/3), 369 bytes | 0 bytes/s, Fertig.\nTotal 3 (delta 0), reused 0 (delta 0)\nremote: no instance branch. no deploy needed\nTo git.ub.intern.uni-leipzig.de:git-workshop\n   82c53ee..67daf34  master -> master\n\n\n\n\n\n\n.gitignore\n werden \u00fcblicherweise im Projekt erfasst\n\n\n\n\nOrdner \n/site\n entfernen\n\n\nDer Stash (auf Branch \ncreate-vufind-docker-docs\n)\n\n\nWenn Dateien im Arbeitbereich durch GIT aktualisiert werden sollen (\ngit pull/merge/apply ...\n), diese Dateien aber \u00c4nderungen aufweisen, bricht die GIT-Aktion ab, um die neuen \u00c4nderungen nicht zu \u00fcberschreiben.\n\n\n$ git checkout create-vufind-docker-docs\nZu Branch 'create-vufind-docker-docs' gewechselt\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 3 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\n\n\n\n\n\n\nzwei Commits sind noch nicht mit dem referenzierten Remote-Server Branch synchronisiert\n\n\n\n\n$ cat >.gitignore <<EOF\n/.vscode\nEOF\n\n\n\n\n\n\nerzeugt Datei \n.gitignore\n mit einem Eintrag\n\n\n\n\n$ git status\nAuf Branch create-vufind-docker-docs\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 3 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        .gitignore\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)\n\n\n\n\n\n\n.gitignore\n befindet sich als unversionierte Datei innerhalb der Arbeitskopie\n\n\n\n\n$ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nerror: The following untracked working tree files would be overwritten by merge:\n        .gitignore\nPlease move or remove them before you merge.\nAbbruch\n\n\n\n\n\n\nf\u00fchrt zum Abbruch des Merges, da neu zu erzeugende Datei bereits vorhanden ist\n\n\nes ist kein Merge m\u00f6glich, da GIT keine Informationen \u00fcber den Inhalt der Datei hat (Commit)\n\n\n\n\nGetrackte \u00c4nderungen (ge\u00e4nderte Dateien, hinzugef\u00fcgte Dateien) k\u00f6nnen in einen Branch-\u00fcbergreifenden\nStapel zwischengespeichert werden. Gleichzeitig wird der aktuelle Branch von diesen \u00c4nderungen bereinigt.\n\n\n$ git add .gitignore\n\n\n\n\n\n\nf\u00fcgt \n.gitignore\n zur Versionskontrolle hinzu\n\n\n\n\n$ git stash\nSaved working directory and index state WIP on create-vufind-docker-docs: 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\nHEAD ist jetzt bei 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\n\n\n\n\n\n\nalle \u00c4nderungen, die sich in der Staging-Area befinden, werden den \nStash\n verschoben\n\n\ndie Arbeitskopie wird von den \u00c4nderungen bereinigt\n\n\n\n\n$ git stash list\nstash@{0}: WIP on create-vufind-docker-docs: 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\n\n\n\n\n\n\nim Stash befindet sich ein Puffer, der unsere \u00c4nderungen vorh\u00e4lt\n\n\nstandardm\u00e4\u00dfig ist der Puffer-Name der Commit, auf welchen die \u00c4nderungen aufsetzen\n\n\n\n\n$ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n .gitignore | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore\n\n\n\n\n\n\nmerge konnte problemlos angewendet werden\n\n\n\n\n$ cat .gitignore\n/site\n\n\n\n\n\n\nneue Datei \n.gitignore\n ist auf dem Stand, wie \nmaster\n\n\n\n\n$ git stash apply\nautomatischer Merge von .gitignore\nKONFLIKT (hinzuf\u00fcgen/hinzuf\u00fcgen): Merge-Konflikt in .gitignore\n\n\n\n\n\n\nwendet den letzten Stash-Puffer auf den aktuellen Branch an\n\n\nKonflikt in \n.gitignore\n wird angemerkt und muss manuell aufgel\u00f6st werden\n\n\n\n\n$ cat .gitignore\n<<<<<<< Updated upstream\n/site\n=======\n/.vscode\n>>>>>>> Stashed changes\n\n\n\n\n\n\nUpdated upstream\n bezeichnet die \u00c4nderungen, welche seit den eigenen, anzuwendenden \u00c4nderungen hinzugekommen sind\n\n\nStashed changes\n bezeichnet die \u00c4nderungen, welche durch Anwendung des Stashes eingef\u00fcgt werden sollen\n\n\n\n\nKonflikt in \n.gitignore\n aufl\u00f6sen\n\n\nDateien l\u00f6schen\n\n\nUm Dateien aus der Versionskontrolle zu entfernen, aber im Arbeitsverzeichnis vorzuhalten nutzt man die Option \n--cached\n.\n\n\n$ git log .vscode\ncommit 1f01e40096b96b33baab268ac1823ef5a99c5f1c\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:34 2017 +0200\n\n    added ide config\n\n\n\n\n\n\nzeigt alle Commits, in denen die spezifizierten Dateien oder Verzeichnisse vorkommen\n\n\n\n\n$ git rm --cached .vscode/tasks.json\nrm '.vscode/tasks.json'\n\n\n\n\n\n\nentfernt die spezifizierte Datei aus der Versionskontrolle, beh\u00e4lt sie aber in der Arbeitskopie\n\n\nEintrag in \n.gitignore\n verhindert, dass die Datei als unversionierte Datei aufgef\u00fchrt wird\n\n\n\n\nDiffs\n\n\nDiffs - Unterschiede - sind kumulative \u00c4nderungen zu einer Basis, welche im\nmaschinell verarbeitbaren Format angezeigt werden. Diffs k\u00f6nnen als Text-Datei\ngespeichert und verteilt werden. Die Einarbeitung in die Arbeitskopie erfolgt\nmittels \ngit apply\n oder dem Unix-Kommandozeilen-Tool [\npatch\n][1].\n\n\n$ git status\nAuf Branch create-vufind-docker-docs\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 5 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n    gel\u00f6scht:       .vscode/tasks.json\n\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n    ge\u00e4ndert:       .gitignore\n\n\n\n\ngit diff\n zeigt die Unterschiede zur Arbeitskopie\n\n\n$ git diff\ndiff --git a/.gitignore b/.gitignore\nindex c9490a5..4eeb754 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1 +1,2 @@\n /site\n+/.vscode\n\n\n\n\n\n\nzeigt alle \u00c4nderungen in Dateien, die bereits der Versionskontrolle unterliegen und nicht in Staging-Area aufgenommen wurden\n\n\n\n\ngit diff --staged\n zeigt die Unterschiede der Staging-Area zur Arbeitskopie\n\n\n$ git diff --staged\ndiff --git a/.vscode/tasks.json b/.vscode/tasks.json\ndeleted file mode 100644\nindex 4625e49..0000000\n--- a/.vscode/tasks.json\n+++ /dev/null\n@@ -1,28 +0,0 @@\n-{\n-       // See https://go.microsoft.com/fwlink/?LinkId=733558\n-       // for the documentation about the tasks.json format\n-       \"version\": \"0.1.0\",\n-       \"command\": \"mkdocs\",\n-       \"isShellCommand\": true,\n-       \"showOutput\": \"always\",\n-       \"suppressTaskName\": true,\n-       \"tasks\": [\n-               {\n-                       \"taskName\": \"build docs\",\n-                       \"args\": [\n-                               \"build\"\n-                       ],\n-                       \"isBuildCommand\": true\n-                       },\n-               {\n-\n-                       \"taskName\": \"serve the docs\",\n-                       \"args\": [\n-                               \"serve\",\n-                               \"-a\",\n-                               \"127.0.0.1:8001\"\n-                       ],\n-                       \"isBackground\": true\n-               }\n-       ]\n-}\n\\ No newline at end of file\n\n\n\n\n\n\nzeigt alle \u00c4nderungen, die in Staging-Area aufgenommen wurden\n\n\n\n\ngit diff master\n zeigt Unterschiede zweier Branches an\n\n\n$ git diff origin/master\ndiff --git a/.gitignore b/.gitignore\nindex c9490a5..4eeb754 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1 +1,2 @@\n /site\n+/.vscode\ndiff --git a/docs/vufind-docker.md b/docs/vufind-docker.md\nnew file mode 100644\nindex 0000000..a6ea6d2\n--- /dev/null\n+++ b/docs/vufind-docker.md\n@@ -0,0 +1,6 @@\n+# VuFind-Entwicklung mit Docker\n+\n+## Vorbereitung\n+\n+* installiere GIT\n+* installiere Docker\n\\ No newline at end of file\n\n\n\n\n\n\nVorsicht bei der Reihenfolge: erst kommt die Basis, dann der Ziel-Branch. Die \u00c4nderungen, die sich ergeben w\u00fcrden den Basis-Branch an den Ziel-Branch angleichen.\n\n\nwird der Zielbranch weggelassen, wird als Ziel die Arbeitskopie angenommen\n\n\n\n\ngit diff --name-only master\n zeigt nur die betroffenen Dateien\n\n\n$ git diff --name-only origin/master\n.gitignore\ndocs/vufind-docker.md\n\n\n\n\ngit show [commit]\n zeigt Metadaten und \u00c4nderungen des angegebenen Commits\n\n\n$ git show\ncommit 0e1dd75b706268078e47a8db2614abba96416605\nMerge: e02bbf9 057be63\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 16:18:51 2017 +0200\n\n    Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\n\n\n\n\n\n\nwird kein Commit angegeben, wird der letzte Commit des aktuellen Branches angezeigt\n\n\n\n\nWeiterf\u00fchrende Links\n\n\n\n\nhttps://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf\n\n\nhttp://de.gitready.com/\n\n\nhttps://try.github.io/",
            "title": "Beginners"
        },
        {
            "location": "/git/beginners/#git-beginners",
            "text": "",
            "title": "GIT-Beginners"
        },
        {
            "location": "/git/beginners/#vorbereitung",
            "text": "",
            "title": "Vorbereitung"
        },
        {
            "location": "/git/beginners/#git-installieren",
            "text": "Ein aktuelles Git sollte auf jeder gr\u00f6\u00dferen Distribution vorliegen, bzw. kann\nf\u00fcr Windows/Mac unter  https://git-scm.com/downloads  heruntergeladen werden.  # Debian/Ubuntu\n$ apt-get install git\n# Fedora\n$ yum install git # (up to Fedora 21)\n$ dnf install git # (Fedora 22 and later)\n# Gentoo\n$ emerge --ask --verbose dev-vcs/git\n# Arch Linux\n$ pacman -S git\n# openSUSE\n$ zypper install git\n# Mageia\n$ urpmi git\n# FreeBSD\n$ pkg install git\n# Solaris 9/10/11 (OpenCSW)\n$ pkgutil -i git\n# Solaris 11 Express\n$ pkg install developer/versioning/git\n# OpenBSD\n$ pkg_add git\n# Alpine\n$ apk add git",
            "title": "GIT installieren"
        },
        {
            "location": "/git/beginners/#anpassen-der-benutzerinformationen",
            "text": "$ git config --global user.name \"Roy Trenneman\"\n$ git config --global user.email \"roy@reynholm-industries.co.uk\"\n$ git config --global --list\nuser.name=Roy Trenneman\nuser.email=roy@reynholm-industries.co.uk   --global  ist Benutzer-Kontext, Einstellungen werden in  $HOME/.gitconfig  gespeichert  --local  ist Repository-Kontext, Einstellungen werden in  <repository-folder>/.git/config  gespeichert  --system  ist Host-Kontext, Einstellungen werden in  /etc/gitconfig  gespeichert  Benutzer-Kontext \u00fcberschreibt Host-Kontext, Repository-Kontext \u00fcberschreibt Benutzer-Kontext",
            "title": "Anpassen der Benutzerinformationen"
        },
        {
            "location": "/git/beginners/#anpassen-des-push-verhaltens",
            "text": "$ git config --global push.default simple   legt explizit das neue Standard-Verhalten von GIT bei Commit-Ver\u00f6ffentlichung fest.\n Andernfalls wird beim ersten Push-Versuch eine Warnung ausgegeben.",
            "title": "Anpassen des Push-Verhaltens"
        },
        {
            "location": "/git/beginners/#repository-klonen",
            "text": "$ git clone workshop@git.ub.intern.uni-leipzig.de:git-workshop\nKlone nach 'git-workshop' ...\nFertig.   GIT-Repositorys werden geklont (kopiert)  s\u00e4mtliche Repository-Aktionen werden lokal durchgef\u00fchrt  das Ergebnis ist ein konsistentes Repository, welches primitiv auf einem oder mehreren Remote-Servern abgelegt werden kann   $ cd git-workshop/\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nnothing to commit, working tree clean   die lokale Kopie des Repositorys ist identisch mit der Version des Servers  der Standard-Branch ist  master   $ git remote -v\norigin  workshop@git.ub.intern.uni-leipzig.de:git-workshop (fetch)\norigin  workshop@git.ub.intern.uni-leipzig.de:git-workshop (push)   git clone  f\u00fcgt automatisch den Server, von dem das Repository geklont wurde, als  origin -Remote hinzu",
            "title": "Repository klonen"
        },
        {
            "location": "/git/beginners/#dateien-umbenennen-mit-git-mv-src-dst",
            "text": "$ git mv docs/index.md docs/mkdocs.md\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        umbenannt:      docs/index.md -> docs/mkdocs.md   git erkennt, dass eine Datei umbenannt wurde, in dem der Inhalt der Dateien verglichen wird  werden zwischen Umbenennen und Hinzuf\u00fcgen zur Versionskontrolle \u00c4nderungen am Inhalt der Datei vorgenommen wird die Datei nicht als  umbenannt  erkannt",
            "title": "Dateien umbenennen mit git mv &lt;src&gt; &lt;dst&gt;"
        },
        {
            "location": "/git/beginners/#code-andern-dateien-hinzufugen",
            "text": "mkdocs.yml  \u00e4ndern,  docs/index.md  hinzuf\u00fcgen, siehe  patches/code_\u00e4ndern_dateien_hinzuf\u00fcgen.patch",
            "title": "Code \u00e4ndern / Dateien hinzuf\u00fcgen"
        },
        {
            "location": "/git/beginners/#git-status-zeigt-geanderte-dateien",
            "text": "$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        umbenannt:      docs/index.md -> docs/mkdocs.md\n\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n        ge\u00e4ndert:       mkdocs.yml\n\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        docs/index.md",
            "title": "git status zeigt ge\u00e4nderte Dateien"
        },
        {
            "location": "/git/beginners/#git-diff-mkdocsyml-zeigt-anderungen-einer-datei",
            "text": "$ git diff mkdocs.yml\ndiff --git a/mkdocs.yml b/mkdocs.yml\nindex c97182f..3212117 100644\n--- a/mkdocs.yml\n+++ b/mkdocs.yml\n@@ -1 +1 @@\n-site_name: My Docs\n+site_name: Workshop Dokumentationen   wird kein Dateiname \u00fcbergeben, werden alle \u00c4nderungen in Dateien angezeigt, die bereits der Versionskontrolle unterliegen und nicht zur Staging-Area hinzugef\u00fcgt wurden",
            "title": "git diff mkdocs.yml zeigt \u00c4nderungen einer Datei"
        },
        {
            "location": "/git/beginners/#git-add-filenamedirname-fugt-geanderte-dateien-zur-staging-area-hinzu",
            "text": "$ git add docs mkdocs.yml\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        ge\u00e4ndert:       docs/index.md\n        kopiert:        docs/index.md -> docs/mkdocs.md\n        ge\u00e4ndert:       mkdocs.yml",
            "title": "git add &lt;filename|dirname&gt; [...] f\u00fcgt ge\u00e4nderte Dateien zur Staging-Area hinzu"
        },
        {
            "location": "/git/beginners/#staging-area-beinhaltet-alle-zum-commit-vorgemerkten-anderungen",
            "text": "$ git diff --staged\ndiff --git a/docs/index.md b/docs/index.md\nindex da37213..80ccc76 100644\n--- a/docs/index.md\n+++ b/docs/index.md\n@@ -1,17 +1,3 @@\n-# Welcome to MkDocs\n+# Workshop Dokumentationen\n\n-For full documentation visit [mkdocs.org](http://mkdocs.org).\n-\n-## Commands\n-\n-* `mkdocs new [dir-name]` - Create a new project.\n-* `mkdocs serve` - Start the live-reloading docs server.\n-* `mkdocs build` - Build the documentation site.\n...   zeigt neue Dateien an, wenn zur Staging-Area hinzugef\u00fcgt",
            "title": "Staging-Area beinhaltet alle zum commit vorgemerkten \u00c4nderungen"
        },
        {
            "location": "/git/beginners/#commit-erstellen",
            "text": "",
            "title": "Commit erstellen"
        },
        {
            "location": "/git/beginners/#git-commit-erstellt-einen-commit-mit-allen-vorgemerkten-anderungen-aus-der-staging-area",
            "text": "$ git commit\n[master 66f8437] * moved brief mkdocs docu to separate page * created new index page * modified title\n 3 files changed, 4 insertions(+), 18 deletions(-)\n rewrite docs/index.md (99%)\n copy docs/{index.md => mkdocs.md} (100%)   leere Commit-Beschreibung bricht Commit ab  \u00c4nderungen wurden als ein Commit in das  lokale  Repository gestellt   lokales Repository weicht um einen Commit vom Remote-Server ab  $ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nnothing to commit, working tree clean",
            "title": "git commit erstellt einen Commit mit allen vorgemerkten \u00c4nderungen aus der Staging-Area"
        },
        {
            "location": "/git/beginners/#die-historie",
            "text": "Die Entwicklung des Projektes veranschaulicht die Historie der Versionskontrolle.\nSie hilft, den Ursprung von Implementationen, Autoren und Bemerkungen anzuzeigen\nund nachzuvollziehen.",
            "title": "Die Historie"
        },
        {
            "location": "/git/beginners/#git-log-zeigt-gesamte-historie-eines-branches",
            "text": "$ git log\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   zeigt neben eineindeutigen Commit-Hash, Commit-Autor und Commit-Datum, zus\u00e4tzlich\n die Commit-Bemerkung  Sortierung erfolgt nach Anwendung des Commits und muss nicht dem Commit-Datum\n entsprechen   $ git log --follow mkdocs.yml\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   zeigt nur die Commit-Historie, welche die angegebene Datei betrifft, auch, wenn sie nicht mehr in der Versionkontrolle vorhanden ist  die Datei muss im Arbeitsbereich vorhanden sein",
            "title": "git log zeigt gesamte Historie eines Branches"
        },
        {
            "location": "/git/beginners/#git-push-veroffentlicht-den-neuen-commit-auf-remote-server",
            "text": "$ git push\nZ\u00e4hle Objekte: 5, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (4/4), Fertig.\nSchreibe Objekte: 100% (5/5), 564 bytes | 0 bytes/s, Fertig.\nTotal 5 (delta 0), reused 0 (delta 0)\nTo workshop@git.ub.intern.uni-leipzig.de:git-workshop\n   f5c2a5c..8c298ce  master -> master\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nnothing to commit, working tree clean",
            "title": "git push ver\u00f6ffentlicht den neuen Commit auf Remote-Server"
        },
        {
            "location": "/git/beginners/#branches-erstellen",
            "text": "",
            "title": "Branches erstellen"
        },
        {
            "location": "/git/beginners/#git-branch-branch-name-erstellt-neuen-branch-ausgehend-von-branch-master",
            "text": "$ git branch create-git-beginners-docs\n$ git checkout create-git-beginners-docs\nZu Branch 'create-git-beginners-docs' gewechselt   Entwicklung erfolgt in Branches, um sich nicht gegenseitig zu behindern  shortcut w\u00e4re  git checkout -b create-git-beginners-docs  \u00c4nderungen werden beim Branch-Wechseln zum neuen Branch mitgenommen, sofern m\u00f6glich   docs/git-beginners.md  erstellen,  docs/index.md  \u00e4ndern, siehe  patches/branches_erstellen.patch",
            "title": "git branch &lt;branch-name&gt; erstellt neuen Branch, ausgehend von Branch master"
        },
        {
            "location": "/git/beginners/#git-add-und-git-commit-zum-speichern-der-anderungen",
            "text": "$ git add docs/\n$ git commit\n[create-git-beginners-docs f6906eb] * initially added git-beginners documentation * modified index page\n 2 files changed, 2 insertions(+)\n create mode 100644 docs/git-beginners.md\n\n$ git status\nAuf Branch create-git-beginners-docs\nnothing to commit, working tree clean\n\n$ git log\ncommit f6906eb41fb9f874d60b34cb304e6435e649b271\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:13:26 2017 +0200\n\n    * initially added git-beginners documentation\n    * modified index page\n\ncommit 66f8437bd5b8d26d5e65ee1af25a82b52dcf82a5\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 26 17:02:45 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 27c4a4334ac4c55bb5585729fcd64a4eeb889743\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure",
            "title": "git add und git commit zum Speichern der \u00c4nderungen"
        },
        {
            "location": "/git/beginners/#git-push-set-upstream-origin-local-branch-name-veroffentlicht-den-branch",
            "text": "$ git push --set-upstream origin create-git-beginners-docs\nZ\u00e4hle Objekte: 5, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (4/4), Fertig.\nSchreibe Objekte: 100% (5/5), 560 bytes | 0 bytes/s, Fertig.\nTotal 5 (delta 0), reused 0 (delta 0)\nTo git.ub.intern.uni-leipzig.de:git-workshop\n * [new branch]      create-git-beginners-docs -> create-git-beginners-docs\nBranch create-git-beginners-docs konfiguriert zum Folgen von Remote-Branch create-git-beginners-docs von origin.   neuer Branch wird ver\u00f6ffentlicht und zum Folgen des gleichen konfiguriert  durch  --set-upstream  wird der Remote-Server und Branch als Referenz eingetragen, um  git pull ,  git push ,  git status  ohne Argumente aufzurufen",
            "title": "git push --set-upstream origin &lt;local-branch-name&gt; ver\u00f6ffentlicht den Branch"
        },
        {
            "location": "/git/beginners/#branches-aktuell-halten-auf-branch-create-vufind-docker-docs",
            "text": "$ git checkout create-vufind-docker-docs\n\n$ git pull\nAlready up-to-date.   ohne Angabe von Remote-Server und Branch wird der aktuelle Branch mit \u00c4nderungen des referenzierten Branchs aktualisiert   docs/vufind-docker.md  \u00e4ndern, siehe  patches/branch_aktuell_halten.patch , commit erstellen  $ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n docs/index.md  | 18 ++----------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 20 insertions(+), 17 deletions(-)\n create mode 100644 docs/mkdocs.md  $ git log\ncommit 5969abcb120c31977453629f41df9a2268f2fe70\nMerge: f1a9427 202ba1a\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 15:24:26 2017 +0200\n\n    Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\n\ncommit f1a9427c2087674fab1b6648ba5a8c70f2f833ae\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 15:23:57 2017 +0200\n\n    WIP made changes to docs\n\ncommit 202ba1a4e25e2af3d101849c0565da16a181b075\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 14:33:07 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * created new index page\n    * modified title\n\ncommit 1f01e40096b96b33baab268ac1823ef5a99c5f1c\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:34 2017 +0200\n\n    added ide config\n\ncommit ef542025b53c461576f37f43c0951df72a2b92aa\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:13 2017 +0200\n\n    initially added vufind-docker documentation\n\ncommit 10aeed70270a918e137c7e693a14f79197023977\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   gibt man Remote-Server und Branch an, werden dessen \u00c4nderungen in den aktuellen Branch gemerged  merge  sortiert den fehlenden  master -Commit chronologisch ein",
            "title": "Branches aktuell halten (auf Branch create-vufind-docker-docs)"
        },
        {
            "location": "/git/beginners/#ignorierte-dateien-auf-branch-master",
            "text": "Beim Testen der Entwicklung entstehen tempor\u00e4re Dateien, die nicht in der Versionskontrolle erfasst werden sollen.\nDiese Dateien und Verzeichnisse werden in einer Datei  .gitignore  aufgelistet.  $ git checkout master\nZu Branch 'master' gewechselt\nIhr Branch ist auf dem selben Stand wie 'origin/master'.   wechselt die Arbeitskopie auf den Branch  master   $ mkdocs build\nINFO    -  Cleaning site directory\nINFO    -  Building documentation to directory: /home/roy/git-workshop/site   mkdocs -Befehl zum Erzeugen der statischen Seiten aus dem Projekt   $ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        site/\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)   Unversionierte Dateien und Verzeichnisse k\u00f6nnen in  .gitignore  aufgenommen werden  Dateien, welche bereits der Versionskontrolle unterliegen, werden in .gitignore ignoriert   $ cat >.gitignore <<EOF\n/site\nEOF   erzeugt Datei  .gitignore  mit einem Eintrag   \n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        .gitignore\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)   GIT behandelt  .gitignore  als neue unversionierte Datei innerhalb der Arbeitskopie   $ git add .gitignore\n$ git commit\n[master c92f8e6] created .gitignore by adding /site\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore\n\n$ git push\nZ\u00e4hle Objekte: 3, Fertig.\nDelta compression using up to 8 threads.\nKomprimiere Objekte: 100% (2/2), Fertig.\nSchreibe Objekte: 100% (3/3), 369 bytes | 0 bytes/s, Fertig.\nTotal 3 (delta 0), reused 0 (delta 0)\nremote: no instance branch. no deploy needed\nTo git.ub.intern.uni-leipzig.de:git-workshop\n   82c53ee..67daf34  master -> master   .gitignore  werden \u00fcblicherweise im Projekt erfasst   Ordner  /site  entfernen",
            "title": "Ignorierte Dateien (auf Branch master)"
        },
        {
            "location": "/git/beginners/#der-stash-auf-branch-create-vufind-docker-docs",
            "text": "Wenn Dateien im Arbeitbereich durch GIT aktualisiert werden sollen ( git pull/merge/apply ... ), diese Dateien aber \u00c4nderungen aufweisen, bricht die GIT-Aktion ab, um die neuen \u00c4nderungen nicht zu \u00fcberschreiben.  $ git checkout create-vufind-docker-docs\nZu Branch 'create-vufind-docker-docs' gewechselt\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 3 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)   zwei Commits sind noch nicht mit dem referenzierten Remote-Server Branch synchronisiert   $ cat >.gitignore <<EOF\n/.vscode\nEOF   erzeugt Datei  .gitignore  mit einem Eintrag   $ git status\nAuf Branch create-vufind-docker-docs\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 3 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nUnversionierte Dateien:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n\n        .gitignore\n\nnichts zum Commit vorgemerkt, aber es gibt unversionierte Dateien (benutzen Sie \"git add\" zum Versionieren)   .gitignore  befindet sich als unversionierte Datei innerhalb der Arbeitskopie   $ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nerror: The following untracked working tree files would be overwritten by merge:\n        .gitignore\nPlease move or remove them before you merge.\nAbbruch   f\u00fchrt zum Abbruch des Merges, da neu zu erzeugende Datei bereits vorhanden ist  es ist kein Merge m\u00f6glich, da GIT keine Informationen \u00fcber den Inhalt der Datei hat (Commit)   Getrackte \u00c4nderungen (ge\u00e4nderte Dateien, hinzugef\u00fcgte Dateien) k\u00f6nnen in einen Branch-\u00fcbergreifenden\nStapel zwischengespeichert werden. Gleichzeitig wird der aktuelle Branch von diesen \u00c4nderungen bereinigt.  $ git add .gitignore   f\u00fcgt  .gitignore  zur Versionskontrolle hinzu   $ git stash\nSaved working directory and index state WIP on create-vufind-docker-docs: 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs\nHEAD ist jetzt bei 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs   alle \u00c4nderungen, die sich in der Staging-Area befinden, werden den  Stash  verschoben  die Arbeitskopie wird von den \u00c4nderungen bereinigt   $ git stash list\nstash@{0}: WIP on create-vufind-docker-docs: 1f6537c Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs   im Stash befindet sich ein Puffer, der unsere \u00c4nderungen vorh\u00e4lt  standardm\u00e4\u00dfig ist der Puffer-Name der Commit, auf welchen die \u00c4nderungen aufsetzen   $ git pull origin master\nVon git.ub.intern.uni-leipzig.de:git-workshop\n * branch            master     -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n .gitignore | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore   merge konnte problemlos angewendet werden   $ cat .gitignore\n/site   neue Datei  .gitignore  ist auf dem Stand, wie  master   $ git stash apply\nautomatischer Merge von .gitignore\nKONFLIKT (hinzuf\u00fcgen/hinzuf\u00fcgen): Merge-Konflikt in .gitignore   wendet den letzten Stash-Puffer auf den aktuellen Branch an  Konflikt in  .gitignore  wird angemerkt und muss manuell aufgel\u00f6st werden   $ cat .gitignore\n<<<<<<< Updated upstream\n/site\n=======\n/.vscode\n>>>>>>> Stashed changes   Updated upstream  bezeichnet die \u00c4nderungen, welche seit den eigenen, anzuwendenden \u00c4nderungen hinzugekommen sind  Stashed changes  bezeichnet die \u00c4nderungen, welche durch Anwendung des Stashes eingef\u00fcgt werden sollen   Konflikt in  .gitignore  aufl\u00f6sen",
            "title": "Der Stash (auf Branch create-vufind-docker-docs)"
        },
        {
            "location": "/git/beginners/#dateien-loschen",
            "text": "Um Dateien aus der Versionskontrolle zu entfernen, aber im Arbeitsverzeichnis vorzuhalten nutzt man die Option  --cached .  $ git log .vscode\ncommit 1f01e40096b96b33baab268ac1823ef5a99c5f1c\nAuthor: Richmond Avenal <richmond@reynholm-industries.co.uk>\nDate:   Thu Apr 27 14:42:34 2017 +0200\n\n    added ide config   zeigt alle Commits, in denen die spezifizierten Dateien oder Verzeichnisse vorkommen   $ git rm --cached .vscode/tasks.json\nrm '.vscode/tasks.json'   entfernt die spezifizierte Datei aus der Versionskontrolle, beh\u00e4lt sie aber in der Arbeitskopie  Eintrag in  .gitignore  verhindert, dass die Datei als unversionierte Datei aufgef\u00fchrt wird",
            "title": "Dateien l\u00f6schen"
        },
        {
            "location": "/git/beginners/#diffs",
            "text": "Diffs - Unterschiede - sind kumulative \u00c4nderungen zu einer Basis, welche im\nmaschinell verarbeitbaren Format angezeigt werden. Diffs k\u00f6nnen als Text-Datei\ngespeichert und verteilt werden. Die Einarbeitung in die Arbeitskopie erfolgt\nmittels  git apply  oder dem Unix-Kommandozeilen-Tool [ patch ][1].  $ git status\nAuf Branch create-vufind-docker-docs\nIhr Branch ist vor 'origin/create-vufind-docker-docs' um 5 Commits.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n    gel\u00f6scht:       .vscode/tasks.json\n\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n    ge\u00e4ndert:       .gitignore",
            "title": "Diffs"
        },
        {
            "location": "/git/beginners/#git-diff-zeigt-die-unterschiede-zur-arbeitskopie",
            "text": "$ git diff\ndiff --git a/.gitignore b/.gitignore\nindex c9490a5..4eeb754 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1 +1,2 @@\n /site\n+/.vscode   zeigt alle \u00c4nderungen in Dateien, die bereits der Versionskontrolle unterliegen und nicht in Staging-Area aufgenommen wurden",
            "title": "git diff zeigt die Unterschiede zur Arbeitskopie"
        },
        {
            "location": "/git/beginners/#git-diff-staged-zeigt-die-unterschiede-der-staging-area-zur-arbeitskopie",
            "text": "$ git diff --staged\ndiff --git a/.vscode/tasks.json b/.vscode/tasks.json\ndeleted file mode 100644\nindex 4625e49..0000000\n--- a/.vscode/tasks.json\n+++ /dev/null\n@@ -1,28 +0,0 @@\n-{\n-       // See https://go.microsoft.com/fwlink/?LinkId=733558\n-       // for the documentation about the tasks.json format\n-       \"version\": \"0.1.0\",\n-       \"command\": \"mkdocs\",\n-       \"isShellCommand\": true,\n-       \"showOutput\": \"always\",\n-       \"suppressTaskName\": true,\n-       \"tasks\": [\n-               {\n-                       \"taskName\": \"build docs\",\n-                       \"args\": [\n-                               \"build\"\n-                       ],\n-                       \"isBuildCommand\": true\n-                       },\n-               {\n-\n-                       \"taskName\": \"serve the docs\",\n-                       \"args\": [\n-                               \"serve\",\n-                               \"-a\",\n-                               \"127.0.0.1:8001\"\n-                       ],\n-                       \"isBackground\": true\n-               }\n-       ]\n-}\n\\ No newline at end of file   zeigt alle \u00c4nderungen, die in Staging-Area aufgenommen wurden",
            "title": "git diff --staged zeigt die Unterschiede der Staging-Area zur Arbeitskopie"
        },
        {
            "location": "/git/beginners/#git-diff-master-zeigt-unterschiede-zweier-branches-an",
            "text": "$ git diff origin/master\ndiff --git a/.gitignore b/.gitignore\nindex c9490a5..4eeb754 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1 +1,2 @@\n /site\n+/.vscode\ndiff --git a/docs/vufind-docker.md b/docs/vufind-docker.md\nnew file mode 100644\nindex 0000000..a6ea6d2\n--- /dev/null\n+++ b/docs/vufind-docker.md\n@@ -0,0 +1,6 @@\n+# VuFind-Entwicklung mit Docker\n+\n+## Vorbereitung\n+\n+* installiere GIT\n+* installiere Docker\n\\ No newline at end of file   Vorsicht bei der Reihenfolge: erst kommt die Basis, dann der Ziel-Branch. Die \u00c4nderungen, die sich ergeben w\u00fcrden den Basis-Branch an den Ziel-Branch angleichen.  wird der Zielbranch weggelassen, wird als Ziel die Arbeitskopie angenommen",
            "title": "git diff master zeigt Unterschiede zweier Branches an"
        },
        {
            "location": "/git/beginners/#git-diff-name-only-master-zeigt-nur-die-betroffenen-dateien",
            "text": "$ git diff --name-only origin/master\n.gitignore\ndocs/vufind-docker.md",
            "title": "git diff --name-only master zeigt nur die betroffenen Dateien"
        },
        {
            "location": "/git/beginners/#git-show-commit-zeigt-metadaten-und-anderungen-des-angegebenen-commits",
            "text": "$ git show\ncommit 0e1dd75b706268078e47a8db2614abba96416605\nMerge: e02bbf9 057be63\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed May 10 16:18:51 2017 +0200\n\n    Merge branch 'master' of git.ub.intern.uni-leipzig.de:git-workshop into create-vufind-docker-docs   wird kein Commit angegeben, wird der letzte Commit des aktuellen Branches angezeigt",
            "title": "git show [commit] zeigt Metadaten und \u00c4nderungen des angegebenen Commits"
        },
        {
            "location": "/git/beginners/#weiterfuhrende-links",
            "text": "https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf  http://de.gitready.com/  https://try.github.io/",
            "title": "Weiterf\u00fchrende Links"
        },
        {
            "location": "/git/advanced/",
            "text": "GIT-Advanced [WIP]\n\n\nRepository anlegen\n\n\n$ git init git-workshop\nInitialisierte leeres Git-Repository in /home/jen/git-workshop/.git/\n\n$ cd git-workshop\n$ git status\nAuf Branch master\n\nInitialer Commit\n\nnichts zu committen (Erstellen/Kopieren Sie Dateien und benutzen Sie \"git add\" zum Versionieren)\n\n\n\n\n\n\ninitialisiert leeres GIT-Repository mit Arbeitsbereich\n\n\nwird kein Repository-Name angegeben, wird das Repository im aktuellen Verzeichnis initialisiert\n\n\n\n\n$ git init --bare git-workshop\nInitialisierte leeres Git-Repository in /srv/jen/git-workshop/\n\n$ cd git-workshop\n$ git status\nfatal: This operation must be run in a work tree\n\n\n\n\n\n\ninitialisiert leeres GIT-Repository ohne Arbeitsbereich\n\n\n\n\nCommit erstellen\n\n\ngit commit --amend\n f\u00fcgt letztem Commit neue \u00c4nderungen hinzu\n\n\n$ git add docs\n\n$ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     docs/mkdocs.md\n\n$ git commit --amend\n[master bfa931f] * moved brief mkdocs docu to separate page * modified index page\n Date: Wed Apr 5 13:13:20 2017 +0200\n 3 files changed, 6 insertions(+), 18 deletions(-)\n rewrite docs/index.md (99%)\n copy docs/{index.md => mkdocs.md} (100%)\n\n$ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nnothing to commit, working tree clean\n\n\n\n\n\nBranches\n\n\ngit fetch [origin]\n holt ver\u00f6ffentlichte \u00c4nderungen vom Remote-Server\n\n\n$ git fetch\nremote: Z\u00e4hle Objekte: 5, Fertig.\nremote: Komprimiere Objekte: 100% (4/4), Fertig.\nremote: Total 5 (delta 0), reused 0 (delta 0)\nEntpacke Objekte: 100% (5/5), Fertig.\nVon git@git.ub.intern.uni-leipzig.de:git-workshop\n   5e58653..bfa931f  master     -> origin/master\n\n\n\n\n\n\n\u00c4nderungen werden nicht auf lokale Branches angewendet, sondern zwischengespeichert\n\n\n\n\ngit merge master\n vereint die \u00c4nderungen von \nmaster\n mit dem aktuellen Branch\n\n\n$ git merge master\nAlready up-to-date.\n\n\n\n\n\n\nkeine \u00c4nderungen im lokalen Master\n\n\n\n\n]$ git checkout master\nZu Branch 'master' gewechselt\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\n\n\n\n\n\n\nTracking-Konfiguration sorgt f\u00fcr die Information, dass der lokale \nmaster\n-Branch\n dem Branch auf dem Remote-Servers hinterher ist.\n\n\n\n\ngit merge\n vereint die \u00c4nderungen\n\n\n$ git merge\nAktualisiere 5e58653..bfa931f\nFast-forward\n docs/index.md  | 18 +++---------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 21 insertions(+), 16 deletions(-)\n create mode 100644 docs/mkdocs.md\n\n$ git log\ncommit bfa931fdb94fd844820263e2bb5dec8e02433673\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 5 13:13:20 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\naktualisiert den lokalen \nmaster\n-Branch mit auf Remote-Server \norigin\n\n ver\u00f6ffentlichten \u00c4nderungen f\u00fcr \nmaster\n-Branch\n\n\n\n\ngit merge master\n (again) aktualisiert den aktuellen Branch\n\n\n$ git merge master\nMerge made by the 'recursive' strategy.\n docs/index.md  | 18 +++---------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 21 insertions(+), 16 deletions(-)\n create mode 100644 docs/mkdocs.md\n\n$ git log\ncommit 75a7b05d54c67c4aebf7f7129b0c1e67325ff808\nMerge: edcb49e 117e2c4\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:15:27 2017 +0200\n\n    Merge branch 'master' into create-git-workshop-docs\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit edcb49e0bcb60c406fed61c1002fdafd16e559e8\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nerstellt einen Merge-Commit, der die \u00c4nderungen des lokalen \nmaster\n-Branch\n mit den \u00c4nderungen auf dem aktuellen Branch zusammenf\u00fchrt\n\n\n\n\n2017-04-10 18:15 Maurice Moss  M\u2500\u2510 [create-git-workshop-docs] Merge branch 'master' into create-git-workshop-docs\n2017-04-10 17:56 Roy Trenneman \u2502 o [master] {origin/master} * moved brief mkdocs docu to separate page * modified index\n2017-04-10 16:53 Maurice Moss  o \u2502 {origin/create-git-workshop-docs} added git-workshop-documentation\n2017-04-05 10:49 Jen Barber    I\u2500\u2518 created mkdocs structure\n\n\n\n\ngit merge <branch>\n bringt \u00c4nderungen auf den Master\n\n\n$ git merge create-git-workshop-docs\nAktualisiere 117e2c4..26171f5\nFast-forward\n docs/git.md | 464 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n\n$ git log\ncommit 26171f5ee64aa72b16ac643e8a2b64654fefa7fa\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:28:19 2017 +0200\n\n    more into git documentation\n\ncommit 45e97f7aa2244066b2d018397d4ea29da6d5d6c3\nMerge: 26796c0 117e2c4\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:56:24 2017 +0200\n\n    Merge remote-tracking branch 'origin/master' into create-git-workshop-docs\n\ncommit 26796c04f33a4ecad877c6977afac3179dbe6a41\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nholt alle Commits eines Branches in den aktuellen Branch\n\n\nverunreinigt GIT-log\n\n\n\n\n2017-04-10 18:28 Maurice Moss  o [master] [create-git-workshop-docs] more into git documentation\n2017-04-10 18:56 Maurice Moss  M\u2500\u2510 Merge remote-tracking branch 'origin/master' into create-git-workshop-docs\n2017-04-10 17:56 Roy Trenneman \u2502 o {origin/master} * moved brief mkdocs docu to separate page * modified index page\n2017-04-10 16:53 Maurice Moss  o \u2502 added git-workshop-documentation\n2017-04-05 10:49 Jen Barber    I\u2500\u2518 created mkdocs structure\n\n\n\n\ngit branch -d <local-branch-name>\n l\u00f6scht den Branch\n\n\nBranches (Alternative Strategie)\n\n\ngit rebase master\n setzt die Commits des aktuellen Branchs auf den vorgespulten \nmaster\n\n\n$ git rebase master\nZun\u00e4chst wird der Branch zur\u00fcckgespult, um Ihre \u00c4nderungen\ndarauf neu anzuwenden ...\nWende an: added git-workshop-documentation\n\n$ git log\ncommit 58cf8023e4e1d41980bca3aefea8eb4148a1298e\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nignoriert chronologische Reihenfolge der Commits\n\n\nh\u00e4lt Verzweigung sauber\n\n\nsollte Standardverhalten sein, eigenen Feature-Branch aktuell zu halten\n\n\n\n\n2017-04-10 16:53 Maurice Moss  o [create-git-workshop-docs] added git-workshop-documentation\n2017-04-10 17:56 Roy Trenneman o [master] {origin/master} * moved brief mkdocs docu to separate page * modified index p\n2017-04-05 10:49 Jen Barber    I created mkdocs structure\n\n\n\n\ngit merge --squash <branch>\n holt \u00c4nderungen eines Branches in den aktuellen Branch\n\n\n$ git merge --squash create-git-workshop-docs\nAktualisiere 117e2c4..550cc4a\nFast-forward\nQuetsche Commit -- HEAD wird nicht aktualisiert\n docs/git.md | 464 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     docs/git.md\n\n$ git commit\n[master 242d2af] merged git-workflow documentation\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n$ git log\ncommit beafe7411a4082f5297d073f4cec983d5899a52f\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:49:58 2017 +0200\n\n    merged git-workflow documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure\n\n\n\n\n\n\nholt \u00c4nderungen, die sich aus allen Commits des angegebenen Branches ergeben\n in die Staging-Area\n\n\ncommit\n erstellt einen neuen Commit auf dem Master, ohne jegliche Referenz zu den urspr\u00fcnglichen Commits\n\n\n\n\n2017-04-10 18:49 Maurice Moss  o [master] merged git-workflow documentation\n2017-04-10 17:56 Roy Trenneman o {origin/master} * moved brief mkdocs docu to separate page * modified index page\n2017-04-05 10:49 Jen Barber    I created mkdocs structure\n\n\n\n\nIgnorierte Dateien\n\n\ngit add -f [file|folder]\n f\u00fcgt ignorierte Dateien zur Versionskontrolle hinzu\n\n\n$ git add .vscode/tasks.json\nDie folgenden Pfade werden durch eine Ihrer \".gitignore\" Dateien ignoriert:\n.vscode/tasks.json\nVerwenden Sie -f wenn Sie diese wirklich hinzuf\u00fcgen m\u00f6chten.\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     .vscode/tasks.json\n\n\n\n\ngit reset [commit]\n macht alle Commits bis zum angegebenen r\u00fcckg\u00e4ngig\n\n\n$ git reset HEAD^\nNicht zum Commit vorgemerkte \u00c4nderungen nach Zur\u00fccksetzung:\nM       docs/git.md\n\n$ git status\nAuf Branch master\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n        ge\u00e4ndert:       docs/git.md\n\nkeine \u00c4nderungen zum Commit vorgemerkt (benutzen Sie \"git add\" und/oder \"git commit -a\")\n\n\n\n\n\n\nrelative Angaben sind m\u00f6glich \nHEAD^\n bedeutet \nletzter Commit\n\n\nerm\u00f6glicht das schrittweise Zur\u00fcckgehen der Commits, ohne die \u00c4nderungen zu verlieren\n\n\n\n\ngit reset --hard [commit]\n macht alle Commits bis zum angegebenen r\u00fcckg\u00e4ngig und verwirft alle \u00c4nderungen\n\n\n$ git reset --hard HEAD^\nHEAD ist jetzt bei 9288761 added vufind-docs, modified mkdocs, modified settings\n\n$ git status\nAuf Branch master\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\nnothing to commit, working tree clean\n\n$ git pull\nAktualisiere 9288761..b822b5e\nFast-forward\n docs/git.md | 23 ++++++++++++-----------\n 1 file changed, 12 insertions(+), 11 deletions(-)\n\n\n\n\n\n\nhilft bei Fehlersuche, z.B. ab wann ein bestimmter Fehler auftritt\n\n\nerm\u00f6glicht irreversiblen Eingriff in die Projekt-Historie\n\n\n\u00c4nderung bereits ver\u00f6ffentlichter Commits sollte vermieden werden\n\n\nVer\u00f6ffentlichung einer ge\u00e4nderten Historie ist standardm\u00e4\u00dfig nicht erlaubt\n\n\n\n\ngit ls-files --other --ignored --exclude-standard\n zeigt von Versionskontrolle ausgenommene Dateien\n\n\n$ git ls-files  --other  --ignored --exclude-standard\nsite/css/highlight.css\nsite/css/theme.css\nsite/css/theme_extra.css\n...\nsite/search.html\nsite/sitemap.xml\nsite/vufind/index.html\n\n\n\n\ngit clean -fdX\n l\u00f6scht alle Dateien, die von der Versionkontrolle ausgenommen sind\n\n\n$ git clean -fdXn\nW\u00fcrde site/ l\u00f6schen\n\n$ git clean -fdX\nL\u00f6sche site/\n\n\n\n\n\n\nVorsicht! \n-x\n l\u00f6scht auch Dateien, die nicht zur Versionkontrolle hinzugef\u00fcgt wurden\n\n\n\n\nErweiterte Kenntnisse\n\n\n+       master      <--+\n|                      |\n+-+     .git           |\n  +-+                  |                                  +----------------------------------+\n    +-+ origin/master -+                                  |                                  |\n    |                                                     | Remote (origin)                  |\n    +-+ origin/create->ufind-workshop-docs                |  +                               |\n    |                                                     |  |                               |\n    +-+ remotes/origin/master           <---------------> |  +-+ master                      |\n    |                                                     |  |                               |\n    +-+ remotes/origin/create->ufind-workshop-docs <----> |  +-+ create->ufind-workshop-docs |\n    |                                                     |  |                               |\n    +-+ remotes/origin/create-git-workshop-docs <-------> |  +-+ create-git-workshop-docs    |\n                                                          |                                  |\n                                                          +----------------------------------+",
            "title": "Advanced"
        },
        {
            "location": "/git/advanced/#git-advanced-wip",
            "text": "",
            "title": "GIT-Advanced [WIP]"
        },
        {
            "location": "/git/advanced/#repository-anlegen",
            "text": "$ git init git-workshop\nInitialisierte leeres Git-Repository in /home/jen/git-workshop/.git/\n\n$ cd git-workshop\n$ git status\nAuf Branch master\n\nInitialer Commit\n\nnichts zu committen (Erstellen/Kopieren Sie Dateien und benutzen Sie \"git add\" zum Versionieren)   initialisiert leeres GIT-Repository mit Arbeitsbereich  wird kein Repository-Name angegeben, wird das Repository im aktuellen Verzeichnis initialisiert   $ git init --bare git-workshop\nInitialisierte leeres Git-Repository in /srv/jen/git-workshop/\n\n$ cd git-workshop\n$ git status\nfatal: This operation must be run in a work tree   initialisiert leeres GIT-Repository ohne Arbeitsbereich",
            "title": "Repository anlegen"
        },
        {
            "location": "/git/advanced/#commit-erstellen",
            "text": "",
            "title": "Commit erstellen"
        },
        {
            "location": "/git/advanced/#git-commit-amend-fugt-letztem-commit-neue-anderungen-hinzu",
            "text": "$ git add docs\n\n$ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     docs/mkdocs.md\n\n$ git commit --amend\n[master bfa931f] * moved brief mkdocs docu to separate page * modified index page\n Date: Wed Apr 5 13:13:20 2017 +0200\n 3 files changed, 6 insertions(+), 18 deletions(-)\n rewrite docs/index.md (99%)\n copy docs/{index.md => mkdocs.md} (100%)\n\n$ git status\nAuf Branch master\nIhr Branch ist vor 'origin/master' um 1 Commit.\n  (benutzen Sie \"git push\", um lokale Commits zu publizieren)\nnothing to commit, working tree clean",
            "title": "git commit --amend f\u00fcgt letztem Commit neue \u00c4nderungen hinzu"
        },
        {
            "location": "/git/advanced/#branches",
            "text": "",
            "title": "Branches"
        },
        {
            "location": "/git/advanced/#git-fetch-origin-holt-veroffentlichte-anderungen-vom-remote-server",
            "text": "$ git fetch\nremote: Z\u00e4hle Objekte: 5, Fertig.\nremote: Komprimiere Objekte: 100% (4/4), Fertig.\nremote: Total 5 (delta 0), reused 0 (delta 0)\nEntpacke Objekte: 100% (5/5), Fertig.\nVon git@git.ub.intern.uni-leipzig.de:git-workshop\n   5e58653..bfa931f  master     -> origin/master   \u00c4nderungen werden nicht auf lokale Branches angewendet, sondern zwischengespeichert",
            "title": "git fetch [origin] holt ver\u00f6ffentlichte \u00c4nderungen vom Remote-Server"
        },
        {
            "location": "/git/advanced/#git-merge-master-vereint-die-anderungen-von-master-mit-dem-aktuellen-branch",
            "text": "$ git merge master\nAlready up-to-date.   keine \u00c4nderungen im lokalen Master   ]$ git checkout master\nZu Branch 'master' gewechselt\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)   Tracking-Konfiguration sorgt f\u00fcr die Information, dass der lokale  master -Branch\n dem Branch auf dem Remote-Servers hinterher ist.",
            "title": "git merge master vereint die \u00c4nderungen von master mit dem aktuellen Branch"
        },
        {
            "location": "/git/advanced/#git-merge-vereint-die-anderungen",
            "text": "$ git merge\nAktualisiere 5e58653..bfa931f\nFast-forward\n docs/index.md  | 18 +++---------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 21 insertions(+), 16 deletions(-)\n create mode 100644 docs/mkdocs.md\n\n$ git log\ncommit bfa931fdb94fd844820263e2bb5dec8e02433673\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Wed Apr 5 13:13:20 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   aktualisiert den lokalen  master -Branch mit auf Remote-Server  origin \n ver\u00f6ffentlichten \u00c4nderungen f\u00fcr  master -Branch",
            "title": "git merge vereint die \u00c4nderungen"
        },
        {
            "location": "/git/advanced/#git-merge-master-again-aktualisiert-den-aktuellen-branch",
            "text": "$ git merge master\nMerge made by the 'recursive' strategy.\n docs/index.md  | 18 +++---------------\n docs/mkdocs.md | 17 +++++++++++++++++\n mkdocs.yml     |  2 +-\n 3 files changed, 21 insertions(+), 16 deletions(-)\n create mode 100644 docs/mkdocs.md\n\n$ git log\ncommit 75a7b05d54c67c4aebf7f7129b0c1e67325ff808\nMerge: edcb49e 117e2c4\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:15:27 2017 +0200\n\n    Merge branch 'master' into create-git-workshop-docs\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit edcb49e0bcb60c406fed61c1002fdafd16e559e8\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   erstellt einen Merge-Commit, der die \u00c4nderungen des lokalen  master -Branch\n mit den \u00c4nderungen auf dem aktuellen Branch zusammenf\u00fchrt   2017-04-10 18:15 Maurice Moss  M\u2500\u2510 [create-git-workshop-docs] Merge branch 'master' into create-git-workshop-docs\n2017-04-10 17:56 Roy Trenneman \u2502 o [master] {origin/master} * moved brief mkdocs docu to separate page * modified index\n2017-04-10 16:53 Maurice Moss  o \u2502 {origin/create-git-workshop-docs} added git-workshop-documentation\n2017-04-05 10:49 Jen Barber    I\u2500\u2518 created mkdocs structure",
            "title": "git merge master (again) aktualisiert den aktuellen Branch"
        },
        {
            "location": "/git/advanced/#git-merge-branch-bringt-anderungen-auf-den-master",
            "text": "$ git merge create-git-workshop-docs\nAktualisiere 117e2c4..26171f5\nFast-forward\n docs/git.md | 464 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n\n$ git log\ncommit 26171f5ee64aa72b16ac643e8a2b64654fefa7fa\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:28:19 2017 +0200\n\n    more into git documentation\n\ncommit 45e97f7aa2244066b2d018397d4ea29da6d5d6c3\nMerge: 26796c0 117e2c4\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:56:24 2017 +0200\n\n    Merge remote-tracking branch 'origin/master' into create-git-workshop-docs\n\ncommit 26796c04f33a4ecad877c6977afac3179dbe6a41\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   holt alle Commits eines Branches in den aktuellen Branch  verunreinigt GIT-log   2017-04-10 18:28 Maurice Moss  o [master] [create-git-workshop-docs] more into git documentation\n2017-04-10 18:56 Maurice Moss  M\u2500\u2510 Merge remote-tracking branch 'origin/master' into create-git-workshop-docs\n2017-04-10 17:56 Roy Trenneman \u2502 o {origin/master} * moved brief mkdocs docu to separate page * modified index page\n2017-04-10 16:53 Maurice Moss  o \u2502 added git-workshop-documentation\n2017-04-05 10:49 Jen Barber    I\u2500\u2518 created mkdocs structure",
            "title": "git merge &lt;branch&gt; bringt \u00c4nderungen auf den Master"
        },
        {
            "location": "/git/advanced/#git-branch-d-local-branch-name-loscht-den-branch",
            "text": "",
            "title": "git branch -d &lt;local-branch-name&gt; l\u00f6scht den Branch"
        },
        {
            "location": "/git/advanced/#branches-alternative-strategie",
            "text": "",
            "title": "Branches (Alternative Strategie)"
        },
        {
            "location": "/git/advanced/#git-rebase-master-setzt-die-commits-des-aktuellen-branchs-auf-den-vorgespulten-master",
            "text": "$ git rebase master\nZun\u00e4chst wird der Branch zur\u00fcckgespult, um Ihre \u00c4nderungen\ndarauf neu anzuwenden ...\nWende an: added git-workshop-documentation\n\n$ git log\ncommit 58cf8023e4e1d41980bca3aefea8eb4148a1298e\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 16:53:41 2017 +0200\n\n    added git-workshop-documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   ignoriert chronologische Reihenfolge der Commits  h\u00e4lt Verzweigung sauber  sollte Standardverhalten sein, eigenen Feature-Branch aktuell zu halten   2017-04-10 16:53 Maurice Moss  o [create-git-workshop-docs] added git-workshop-documentation\n2017-04-10 17:56 Roy Trenneman o [master] {origin/master} * moved brief mkdocs docu to separate page * modified index p\n2017-04-05 10:49 Jen Barber    I created mkdocs structure",
            "title": "git rebase master setzt die Commits des aktuellen Branchs auf den vorgespulten master"
        },
        {
            "location": "/git/advanced/#git-merge-squash-branch-holt-anderungen-eines-branches-in-den-aktuellen-branch",
            "text": "$ git merge --squash create-git-workshop-docs\nAktualisiere 117e2c4..550cc4a\nFast-forward\nQuetsche Commit -- HEAD wird nicht aktualisiert\n docs/git.md | 464 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     docs/git.md\n\n$ git commit\n[master 242d2af] merged git-workflow documentation\n 1 file changed, 464 insertions(+)\n create mode 100644 docs/git.md\n\n$ git log\ncommit beafe7411a4082f5297d073f4cec983d5899a52f\nAuthor: Maurice Moss <maurice@reynholm-industries.co.uk>\nDate:   Mon Apr 10 18:49:58 2017 +0200\n\n    merged git-workflow documentation\n\ncommit 117e2c4265322d8fcca898de9bea9749666ebcb4\nAuthor: Roy Trenneman <roy@reynholm-industries.co.uk>\nDate:   Mon Apr 10 17:56:00 2017 +0200\n\n    * moved brief mkdocs docu to separate page\n    * modified index page\n\ncommit 5e586536cd4267fbf02a5c9e2ef8397b4e86294f\nAuthor: Jen Barber <jen@reynholm-industries.co.uk>\nDate:   Wed Apr 5 10:49:15 2017 +0200\n\n    created mkdocs structure   holt \u00c4nderungen, die sich aus allen Commits des angegebenen Branches ergeben\n in die Staging-Area  commit  erstellt einen neuen Commit auf dem Master, ohne jegliche Referenz zu den urspr\u00fcnglichen Commits   2017-04-10 18:49 Maurice Moss  o [master] merged git-workflow documentation\n2017-04-10 17:56 Roy Trenneman o {origin/master} * moved brief mkdocs docu to separate page * modified index page\n2017-04-05 10:49 Jen Barber    I created mkdocs structure",
            "title": "git merge --squash &lt;branch&gt; holt \u00c4nderungen eines Branches in den aktuellen Branch"
        },
        {
            "location": "/git/advanced/#ignorierte-dateien",
            "text": "",
            "title": "Ignorierte Dateien"
        },
        {
            "location": "/git/advanced/#git-add-f-filefolder-fugt-ignorierte-dateien-zur-versionskontrolle-hinzu",
            "text": "$ git add .vscode/tasks.json\nDie folgenden Pfade werden durch eine Ihrer \".gitignore\" Dateien ignoriert:\n.vscode/tasks.json\nVerwenden Sie -f wenn Sie diese wirklich hinzuf\u00fcgen m\u00f6chten.\n\n$ git status\nAuf Branch master\nIhr Branch ist auf dem selben Stand wie 'origin/master'.\nzum Commit vorgemerkte \u00c4nderungen:\n  (benutzen Sie \"git reset HEAD <Datei>...\" zum Entfernen aus der Staging-Area)\n\n        neue Datei:     .vscode/tasks.json",
            "title": "git add -f [file|folder] f\u00fcgt ignorierte Dateien zur Versionskontrolle hinzu"
        },
        {
            "location": "/git/advanced/#git-reset-commit-macht-alle-commits-bis-zum-angegebenen-ruckgangig",
            "text": "$ git reset HEAD^\nNicht zum Commit vorgemerkte \u00c4nderungen nach Zur\u00fccksetzung:\nM       docs/git.md\n\n$ git status\nAuf Branch master\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\n\u00c4nderungen, die nicht zum Commit vorgemerkt sind:\n  (benutzen Sie \"git add <Datei>...\", um die \u00c4nderungen zum Commit vorzumerken)\n  (benutzen Sie \"git checkout -- <Datei>...\", um die \u00c4nderungen im Arbeitsverzeichnis zu verwerfen)\n\n        ge\u00e4ndert:       docs/git.md\n\nkeine \u00c4nderungen zum Commit vorgemerkt (benutzen Sie \"git add\" und/oder \"git commit -a\")   relative Angaben sind m\u00f6glich  HEAD^  bedeutet  letzter Commit  erm\u00f6glicht das schrittweise Zur\u00fcckgehen der Commits, ohne die \u00c4nderungen zu verlieren",
            "title": "git reset [commit] macht alle Commits bis zum angegebenen r\u00fcckg\u00e4ngig"
        },
        {
            "location": "/git/advanced/#git-reset-hard-commit-macht-alle-commits-bis-zum-angegebenen-ruckgangig-und-verwirft-alle-anderungen",
            "text": "$ git reset --hard HEAD^\nHEAD ist jetzt bei 9288761 added vufind-docs, modified mkdocs, modified settings\n\n$ git status\nAuf Branch master\nIhr Branch ist zu 'origin/master' um 1 Commit hinterher, und kann vorgespult werden.\n  (benutzen Sie \"git pull\", um Ihren lokalen Branch zu aktualisieren)\nnothing to commit, working tree clean\n\n$ git pull\nAktualisiere 9288761..b822b5e\nFast-forward\n docs/git.md | 23 ++++++++++++-----------\n 1 file changed, 12 insertions(+), 11 deletions(-)   hilft bei Fehlersuche, z.B. ab wann ein bestimmter Fehler auftritt  erm\u00f6glicht irreversiblen Eingriff in die Projekt-Historie  \u00c4nderung bereits ver\u00f6ffentlichter Commits sollte vermieden werden  Ver\u00f6ffentlichung einer ge\u00e4nderten Historie ist standardm\u00e4\u00dfig nicht erlaubt",
            "title": "git reset --hard [commit] macht alle Commits bis zum angegebenen r\u00fcckg\u00e4ngig und verwirft alle \u00c4nderungen"
        },
        {
            "location": "/git/advanced/#git-ls-files-other-ignored-exclude-standard-zeigt-von-versionskontrolle-ausgenommene-dateien",
            "text": "$ git ls-files  --other  --ignored --exclude-standard\nsite/css/highlight.css\nsite/css/theme.css\nsite/css/theme_extra.css\n...\nsite/search.html\nsite/sitemap.xml\nsite/vufind/index.html",
            "title": "git ls-files --other --ignored --exclude-standard zeigt von Versionskontrolle ausgenommene Dateien"
        },
        {
            "location": "/git/advanced/#git-clean-fdx-loscht-alle-dateien-die-von-der-versionkontrolle-ausgenommen-sind",
            "text": "$ git clean -fdXn\nW\u00fcrde site/ l\u00f6schen\n\n$ git clean -fdX\nL\u00f6sche site/   Vorsicht!  -x  l\u00f6scht auch Dateien, die nicht zur Versionkontrolle hinzugef\u00fcgt wurden",
            "title": "git clean -fdX l\u00f6scht alle Dateien, die von der Versionkontrolle ausgenommen sind"
        },
        {
            "location": "/git/advanced/#erweiterte-kenntnisse",
            "text": "+       master      <--+\n|                      |\n+-+     .git           |\n  +-+                  |                                  +----------------------------------+\n    +-+ origin/master -+                                  |                                  |\n    |                                                     | Remote (origin)                  |\n    +-+ origin/create->ufind-workshop-docs                |  +                               |\n    |                                                     |  |                               |\n    +-+ remotes/origin/master           <---------------> |  +-+ master                      |\n    |                                                     |  |                               |\n    +-+ remotes/origin/create->ufind-workshop-docs <----> |  +-+ create->ufind-workshop-docs |\n    |                                                     |  |                               |\n    +-+ remotes/origin/create-git-workshop-docs <-------> |  +-+ create-git-workshop-docs    |\n                                                          |                                  |\n                                                          +----------------------------------+",
            "title": "Erweiterte Kenntnisse"
        },
        {
            "location": "/vufind-docker/",
            "text": "VuFind Workshop\n\n\nVorbereitung\n\n\n\n\nVPN-Zugang zu internen UBL-Netzwerk\n\n\nSSH-Key der Nutzer im Git-Repo hinterlegen, Rechte geben\n\n\nGit, Docker, docker-compose installieren\n\n\nPorts freischalten auf Solr4Entwickler\n\n\n\n\nGIT einrichten\n\n\n\n\nBenutzerinformationen mit \ngit config\n\n\n\n\ngit config --global push.default simple\ngit config --global user.email <emailadresse>\ngit config --global user.name <name>\n\n\n\n\n\n\nstandard-Editor f\u00fcr commit-Messages mit \ngit config --global core.editor <binary>\n\n\n\n\nInstanzen-Branch auschecken\n\n\n\n\nRepository clonen \ngit clone git@git.ub.intern.uni-leipzig.de:vufind2\n\n\nBranch auschecken \ngit checkout instance/<isil>\n\n\n\n\nVufind-Konfigurationshierarchie\n\n\n\n\ndev\n-Konfiguration aus Instanzenkonfiguration erzeugen\n\n\n\n\nfind vufind2/de_l152/dev/ -name \\*.sample | while read -r file; do cp -v \"$file\" \"${file%%.sample}\"; done;\n\n\n\n\n\n\nSolr-Index anpassen in \n<isil>/dev/config/vufind/config.ini\n\n\n\n\n[Index]\nurl = http://172.18.85.142:8085/solr\n\n\n\n\n\n\nSession-Storage \u00fcberschreiben in \n<isil>/dev/config/vufind/config.ini\n (tempor\u00e4r hinzuf\u00fcgen, bis Datenbank erzeugt wurde)\n\n\n\n\n[Session]\ntype = file\n\n\n\n\n\n\nApache2-Konfiguration anpassen (notwendig, wenn eigene Module entwickelt werden)\n\n\nSetEnv VUFIND_LOCAL_DIR /usr/local/vufind2/<isil>/dev\n\n\nSetEnv VUFIND_LOCAL_MODULES finc\n\n\n\n\nDocker-Container starten\n\n\n\n\ndocker-compose up\n\n\nerstellt und startet Container-Definition aus \ndocker-compose.yml\n\n\ndocker-compose stop\n\n\nstoppt den Container, ohne ihn zu l\u00f6schen\n\n\ndocker-compose start\n\n\nstartet den bereits erstellten Container\n\n\ndocker-compose down\n\n\nstoppt den Container und entfernt alle in der \ndocker-compose.yml\n definierten Netzwerke und Container\n\n\n\n\nVuFind aufrufen\n\n\n\n\nhttp(s)://localhost/\n\n\n\n\nDatenbank enrichten\n\n\n\n\nhttp(s)://localhost/Install",
            "title": "VuFind-Docker"
        },
        {
            "location": "/vufind-docker/#vufind-workshop",
            "text": "",
            "title": "VuFind Workshop"
        },
        {
            "location": "/vufind-docker/#vorbereitung",
            "text": "VPN-Zugang zu internen UBL-Netzwerk  SSH-Key der Nutzer im Git-Repo hinterlegen, Rechte geben  Git, Docker, docker-compose installieren  Ports freischalten auf Solr4Entwickler",
            "title": "Vorbereitung"
        },
        {
            "location": "/vufind-docker/#git-einrichten",
            "text": "Benutzerinformationen mit  git config   git config --global push.default simple\ngit config --global user.email <emailadresse>\ngit config --global user.name <name>   standard-Editor f\u00fcr commit-Messages mit  git config --global core.editor <binary>",
            "title": "GIT einrichten"
        },
        {
            "location": "/vufind-docker/#instanzen-branch-auschecken",
            "text": "Repository clonen  git clone git@git.ub.intern.uni-leipzig.de:vufind2  Branch auschecken  git checkout instance/<isil>",
            "title": "Instanzen-Branch auschecken"
        },
        {
            "location": "/vufind-docker/#vufind-konfigurationshierarchie",
            "text": "dev -Konfiguration aus Instanzenkonfiguration erzeugen   find vufind2/de_l152/dev/ -name \\*.sample | while read -r file; do cp -v \"$file\" \"${file%%.sample}\"; done;   Solr-Index anpassen in  <isil>/dev/config/vufind/config.ini   [Index]\nurl = http://172.18.85.142:8085/solr   Session-Storage \u00fcberschreiben in  <isil>/dev/config/vufind/config.ini  (tempor\u00e4r hinzuf\u00fcgen, bis Datenbank erzeugt wurde)   [Session]\ntype = file   Apache2-Konfiguration anpassen (notwendig, wenn eigene Module entwickelt werden)  SetEnv VUFIND_LOCAL_DIR /usr/local/vufind2/<isil>/dev  SetEnv VUFIND_LOCAL_MODULES finc",
            "title": "Vufind-Konfigurationshierarchie"
        },
        {
            "location": "/vufind-docker/#docker-container-starten",
            "text": "docker-compose up  erstellt und startet Container-Definition aus  docker-compose.yml  docker-compose stop  stoppt den Container, ohne ihn zu l\u00f6schen  docker-compose start  startet den bereits erstellten Container  docker-compose down  stoppt den Container und entfernt alle in der  docker-compose.yml  definierten Netzwerke und Container",
            "title": "Docker-Container starten"
        },
        {
            "location": "/vufind-docker/#vufind-aufrufen",
            "text": "http(s)://localhost/",
            "title": "VuFind aufrufen"
        },
        {
            "location": "/vufind-docker/#datenbank-enrichten",
            "text": "http(s)://localhost/Install",
            "title": "Datenbank enrichten"
        },
        {
            "location": "/mkdocs/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "MkDocs"
        },
        {
            "location": "/mkdocs/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/mkdocs/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/mkdocs/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        }
    ]
}